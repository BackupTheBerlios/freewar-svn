{\rtf1\ansi\ansicpg1252\deff0\deflang1033\deflangfe1033{\fonttbl{\f0\froman\fprq2\fcharset0 Times;}{\f1\fmodern\fprq1\fcharset0 Courier New;}{\f2\fswiss\fprq2\fcharset0 Verdana;}{\f3\froman\fprq2\fcharset2 Symbol;}}
{\*\generator Msftedit 5.41.15.1503;}\viewkind4\uc1\pard\qc\lang1036\ul\b\f0\fs32\par
DOSSIER DE PRESENTATION :\par
\pard\ulnone\b0\fs24\par
\par
Projet Libre "FREEWAR" \par
\par
\par
\lang1033\ul\b Groupe\b0  :\par
\ulnone\f1 Jonathan Ribas : \tab\tab ribas_j\par
Jonathan Huot : \tab\tab huot_j\par
\lang1036 St\'e9phane Petitcolas\tab : \tab petitc_s\par
Ma\'ebl Skondras : \tab\tab skondr_m\par
\f0\par
\par
\ul\b Sommaire:\par
\ulnone\b0\par
\par
\f1 Pr\'e9sentation du projet.\tab\tab\tab\tab\tab\tab\tab Page\tab 2\par
\pard\fi360 - Objectifs a long terme du projet.\tab\tab\tab\tab Page\tab 2\par
- Objectifs pour l\rquote ann\'e9e tech2.\tab\tab\tab\tab\tab Page\tab 5\par
- Planning d\'e9taill\'e9.\tab\tab\tab\tab\tab\tab\tab Page 5\par
\tab\tab D\'e9coupage du projet\tab\tab\tab\tab\tab\tab Page 5\par
\tab\tab R\'e9partition des t\'e2ches\tab\tab\tab\tab\tab Page 6\par
\pard\par
\par
Pr\'e9sentation du groupe\tab\tab\tab\tab\tab\tab\tab Page 7\par
\pard\fi360 - Fonctions des membres.\par
 - Comp\'e9tences techniques.\par
\pard\par
\par
Structure Technique.\tab\tab\tab\tab\tab\tab\tab Page\tab 8\par
\pard\fi720 - Le Path-finding A*/Ray-Cast.\tab\tab\tab\tab Page\tab 8\par
- Base de donn\'e9es XML du jeu.\tab\tab\tab\tab\tab Page\tab 9\par
- Fonctionnement de base\tab\tab\tab\tab\tab\tab Page\tab 9\par
\pard\qc\f2\page\ul\fs32 Pr\'e9sentation du projet\par
\pard\ulnone\f0\fs24\par
\ul\b Objectif \'e0 long terme du projet\par
\ulnone\b0\par
Notre projet libre de deuxi\'e8me ann\'e9e consiste \'e0 d\'e9velopper un jeu vid\'e9o de type RTS (Real Time Strategy). On souhaite mettre l\rquote accent majoritairement sur le moteur du jeu, (affichage graphique, l\rquote intelligence artificielle, etc.) par opposition au jeu lui-m\'eame. Ainsi le jeu pourra avoir plusieurs \'ab\~but\~\'bb, ou \'eatre de type diff\'e9rent (jeu de guerre, simulation d\rquote une ville, etc.). Nous aimerions \'e9galement aboutir a un moteur plus pouss\'e9 et plus innovant sur de nombreux points par rapport a ceux des jeux vid\'e9os actuels.\par
Ces points, seront d\'e9taill\'e9s maintenant\~:\par
\par
\ul Sa compatibilit\'e9 et sa portabilit\'e9\~:\par
\ulnone\par
Nous comptons porte notre jeu, sur plus d\rquote une dizaine de syst\'e8mes d\rquote exploitation diff\'e8rents.\par
Parmi ceux-ci, et en priorit\'e9\~: GNU/Linux, Windows 9X/ME, Windows NT/XP, Windows CE, BeOS, MacOS Classic, MacOS X, FreeBSD, OpenBSD, NetBSD, Solaris, Qtopia.\par
Nous comptons \'e9galement porte sur les architectures suivantes\~: x86, SPARC, Alpha, PPC, ARM. Il va de soi, que les clients et serveurs respectifs, puissent discuter entre eux, peu importe l\rquote architecture ou le syst\'e8me sur lequel ils tournent.\par
Nous devrions pouvoir faire un serveur d\'e9di\'e9 sous x86/Linux, jouer sous Windows XP avec un ami sous SPARC/OpenBSD et un autre sur son PDA ARM/OpenZaurus sans que cela n\rquote ait d\rquote impact sur le jeu.\par
\par
\ul Les Gamespaces (Espaces de jeu)\~:\par
\ulnone\par
L\rquote\'e9cran (le terrain) de jeu sera \'eatre totalement param\'e9trable, ainsi, on pourra avoir plusieurs fen\'eatres de jeu, totalement ind\'e9pendantes, pouvant \'eatre ouvertes, ferm\'e9s, minimis\'e9es, agrandies, re-dimensionn\'e9es, \'e0 volont\'e9. Chaque fen\'eatre ind\'e9pendante est en fait une \'ab\~Gamespace\~\'bb. Ces gamespaces seront ensuite eux-m\'eames, divisibles en plusieurs gamespace. La nature des Gamespaces sera variable. Celle-ci pouvant aussi bien \'eatre une vue de la carte du jeu, un vue de l\rquote action, un sous-menu particulier, les options du jeu, la construction de b\'e2timents ou encore son lecteur mp3.\par
\par
\ul Le syst\'e8me de packages\~:\par
\ulnone\par
L\rquote installation et la cr\'e9ation de nouveau packages sera simplifi\'e9e au maximum pour l\rquote utilisateur. Cette simplicit\'e9 ne pourra \'eatre atteinte qu\rquote a travers la r\'e9alisation de plusieurs imp\'e9ratifs. Premi\'e8rement, avoir des fichiers de configuration explicites et compr\'e9hensibles. C'est-\'e0-dire, ne pas les cacher dans des sous r\'e9pertoires ou des archives dans un format obscure ou crypt\'e9 et leur donner des noms logiques (coh\'e9rents avec leur contenu). Deuxi\'e8mement, la syntaxe adopt\'e9e pour ces fichiers devra \'eatre simple, et assimilable rapidement sans trop de difficult\'e9s, m\'eame pour un n\'e9ophyte. Enfin, l\rquote installation, c'est-\'e0-dire la mise en place des packages, pour que le jeu les prenne en compte devra \'eatre simple et accessible. Au final, on minimise les actions qu\rquote a \'e0 faire l\rquote utilisateur, pour d\rquote une part lui \'e9viter des taches, et d\rquote une autre pour minimiser les erreurs possibles. Un installeur pourra \'e9ventuellement voir le jour.\par
Enfin, ces packages, permettront de \'abkit-t\'e9\~\'bb le jeu en installant d\rquote un seul coup, des nouveaux sc\'e9narios, des cartes de jeu, des unit\'e9s, des sons, etc. En pratique, le moteur ne changera pas et ce sont les packages install\'e9s ou \'ab\~MOD\~\'bb qui feront le jeu.\par
\page\ul L\rquote Interaction avec l\rquote  environment:\par
\par
\ulnone Tous les \'e9l\'e9ments des cartes de jeu pourront \'eatre modifi\'e9s/cr\'e9\'e9s/d\'e9truit/utilis\'e9s. En effet, par exemple les arbres pourront \'eatre coup\'e9s pour le bois, on pourra aussi l'enchanter pour s'en servir comme unit\'e9 d'attaque, on pourra " l'aspirer " pour augmenter ses r\'e9serves de mana, on pourra \'e9galement en planter pour en re-cr\'e9er; Les interactions seront diff\'e9rentes et uniques selon les \'e9l\'e9ments de la carte (terre, pierre, eau, animaux, etc.), selon la race, et selon l\rquote unit\'e9. Cela va dramatiquement augmenter et diversifier la partie strat\'e9gique et les tactiques \'e0 adopter pendant une bataille suivant les races avec lesquelles on joue. Si l\rquote on reprend notre exemple pr\'e9c\'e9dant, certains utiliseront le bois disponible sur la carte non pas pour s\rquote en servir mais pour emp\'eacher l'autre joueur d'augmenter sa r\'e9serve de mana ou pire encore, d\rquote enchanter les arbres et obtenir des unit\'e9s suppl\'e9mentaires ais\'e9ment.\par
\par
\ul Le syst\'e8me de configuration:\par
\ulnone\par
Nous aimerions que le joueur soit ma\'eetre de son jeu. Il doit par exemple, pouvoir choisir se qui s\rquote affiche sur son \'e9cran et les touches qu\rquote il utilise pour jouer. Son HUD (Head Up Display) doit \'eatre enti\'e8rement param\'e9trable.\par
Nous allons essayer de mettre le moins d\rquote aspect \'ab\~en dur\~\'bb et ainsi permettre au joueur de les modifier. Cela comprends les gamespaces, les touches de raccourcis, les scripts, le profil (nom, avatar, scores, etc.), les skins, les options et bien d\rquote autres aspects.\par
Id\'e9alement, ses informations seront stock\'e9es dans un unique fichier ou package, qu\rquote il suffira de sauvegarder, pour sauvegarder toutes les modifications effectu\'e9es au jeu.\par
Cela peut s\rquote av\'e9rer tr\'e8s pratique lors d\rquote une re-installation, lorsque l\rquote on jour chez un ami ou sur tout PC qui n\rquote est pas le notre (a une LAN par exemple).\par
Bien entendu, ce ou ces fichier(s) auront une syntaxe simple et compr\'e9hensible, et seront \'e9ditable \'ab\~a la main\~\'bb.\par
\par
\ul La gestion de \'ab\~couches\~\'bb\~:\par
\ulnone\par
Le moteur int\'e9grera aussi \'e0 terme une gestion de plan (ou layers), pour pouvoir s\'e9parer facilement plusieurs espaces de jeux. Nous pourrons avoir par exemple, un plan pour la terre plus l\rquote eau (en surface), un plan sous terre, et un plan dans l\rquote air (ciel, voir espace). Ces plans pourront \'eatre \'ab\~superposables\~\'bb ou non. C'est-\'e0-dire que l\rquote on pourrait afficher plusieurs plans \'e0 l\rquote\'e9cran. Inversement, on pourrait n\rquote en afficher qu\rquote un et ainsi obliger le joueur \'e0 choisir le plan dans lequel il \'e9voluera. Des raccourcis clavier seront bien sur disponibles pour passer d\rquote un plan \'e0 un autre. Enfin, selon la nature du plan et de la race du joueur, l\rquote interaction entre les unit\'e9s et ce plan sera variable et unique.\par
\par
\ul\page L\rquote\'e9criture de scripts\~:\par
\ulnone\par
Le moteur de jeu pr\'e9vu est cens\'e9 \'eatre scriptable. Cela veut dire, qu\rquote\'e0 travers l\rquote\'e9criture de fichiers texte sp\'e9ciaux (fichiers scripts) il serait possible d\rquote automatiser une s\'e9rie d\rquote actions.\par
La syntaxe ainsi que la port\'e9e des scripts seront (pour le moment) intentionnellements brid\'e9s. A terme ces derniers pourront avoir une port\'e9e beaucoup plus large sur le jeu.\par
Le but des scripts est de permettre au joueur d\rquote automatiser certaines taches qu\rquote il fait normalement de fa\'e7on r\'e9guli\'e8re. Ainsi, il lance son script, et peut se concentrer sur autre chose. L\rquote utilisation des scripts apportera donc une dimension nouvelle au jeu.\par
La bride est la pour \'e9viter que certains (plus programmeurs que joueurs) ne cr\'e9ent des scripts trop puissants. Il est possible que le langages syntaxique des fichiers scripts soit r\'e9\'e9tudi\'e9 et sa port\'e9e augment\'e9 plus tard, si l\rquote on en ressent le besoin.\par
\par
\ul Mode Multi joueur\~:\par
\ulnone\par
Le moteur sera bien sur capable de dialoguer \'e0 travers les r\'e9seaux TCP/IP actuels. Toutes les interfaces r\'e9seau de la machine (du moment qu\rquote elle parle le TCP/IP) seront accessibles. On ne d\'e9sire pas brid\'e9 le joueur a trois interfaces (locale, internet, ethernet) mais lui laisser jouer sur toutes interface disponible (Wi-Fi, USB, serie, \'85).\par
\par
Les points forts de ce jeu seront donc son originalit\'e9, sa flexibilit\'e9, et sa convivialit\'e9 !\par
\par
Plus pr\'e9cis\'e9ment, notre but est de mettre au point un moteur de jeu RTS comprenant au moins toutes ces id\'e9es, et de fournir avec quelques jeux (MOD) l'utilisant, afin que plus tard, quelqu'un (ou une \'e9quipe) puisse faire son propre jeu \'e0 partir de notre moteur et de toute la documentation qui l'accompagne.\par
\par
\page\ul\b Objectifs pour l\rquote ann\'e9e Tech2.\par
\ulnone\b0\par
Bien entendu, fin juillet 2004, le moteur de jeu ainsi que le premier jeu l'accompagnant n'auront pas toutes les fonctionnalit\'e9s d\'e9crites ci-dessus, dans le laps de temps qu'il nous est accord\'e9.\par
\par
Nos objectifs pour le rendu de juillet sont :\par
\par
\pard\fi-360\li720\tx720\f3\'b7\tab\f0 Un moteur fonctionnel et modulable, permettant par la suite l\rquote impl\'e9mentation ais\'e9e de nos objectifs restants et futurs.\par
\pard\fi360\li360 Le moteur inclura la gestion d'actions de base tels que:\par
\pard\fi-360\li1080\tx1080 -\tab La production d'unit\'e9s.\par
\pard\fi-360\li1080 -\tab La construction de b\'e2timents.\par
-\tab Le d\'e9placement d'unit\'e9s.\par
-\tab Les interactions entre unit\'e9s (combats, etc). Gagner ou perdre une partie.\par
-\tab Portable sur au moins deux syst\'e8mes d\rquote exploitation diff\'e9rents (non d\'e9finis).\par
-\tab La communication client \endash  serveur en r\'e9seau.\par
\pard\fi-360\li720\tx720\f3\'b7\tab\f0 Un jeu, nomm\'e9 \'ab\~A First Chaos\~\'bb, accompagnant le moteur.\par
\pard\nowidctlpar\par
\pard\ul\par
\b Planning d\'e9taill\'e9\par
\ulnone\b0\par
\pard\li720\ul D\'e9coupage du projet\~:\par
\pard\ulnone\par
\pard\fi720 1 ) Terminer la description du squelette du moteur\par
2) D\'e9velopper\~:\par
\pard\fi720\li720 a. Le squelette du moteur\par
b. La partie graphique\par
c. Le d\'e9placement d\rquote unit\'e9s (ajout du pathfinding d\'e9j\'e0 r\'e9alis\'e9)\par
d. La construction d\rquote unit\'e9s et de b\'e2timents\par
e. Les interactions simples entre les unit\'e9s (collisions)\par
\pard\fi720 3) Etablir le protocole r\'e9seau.\par
4) D\'e9velopper\~:un serveur et client fonctionnels.\par
5) D\'e9bugue \'e9ventuel des interactions entre les joueurs.\par
6) D\'e9velopper\~:les interactions complexes entre les unit\'e9s (attaques)\par
7) Ajustement du \'ab\~gameplay\~\'bb\~:\par
\pard\ul\page\ulnone\tab\ul R\'e9partition des t\'e2ches\~:\par
\ulnone\par
Avril\~:\par
\tab D\'e9but Avril\~: T\'e2che 1 termin\'e9e.\par
\tab Avril Semaine 1\~: T\'e2che 2) a.\par
\tab Avril Semaine 2\~: T\'e2che 2) b et 2) c.\par
\tab Avril Semaine 3\~: T\'e2che 2) d.\par
\tab Avril Semaine 4\~: T\'e2che 2) e.\par
\tab Fin Avril\~: D\'e9bugue et \'e9ventuel avance/retard sur les t\'e2ches.\par
Mai\~:\par
\pard\nowidctlpar\tab Mai Semaine 1: T\'e2che 3)\par
\pard\nowidctlpar\fi720 Mai Semaine 2: T\'e2che 4)\par
Mai Semaine 3: T\'e2che 5)\par
Mai Semaine 4: T\'e2che 6)\par
\pard Juin\~:\par
\tab Juin\~: Semaine 1\~: T\'e2che 6)\par
\tab Juin\~: Semaine 2\~: D\'e9bug des \'e9ventuels probl\'e8mes, et ajustement du temps.\par
\tab Juin\~: Semaine 3\~: T\'e2che 7)\par
\tab Juin\~: Semaine 4\~: T\'e2che 7) Et \'e9ventuels bonus.\par
\par
Fin Juin\~: Rendu.\par
\par
\par
Les t\'e2ches seront r\'e9parties selon le feeling des membres du groupe au moment pr\'e9sent, voire divis\'e9es en plusieurs sous parties.\par
\par
\par
\par
\par
\par
\par
\par
\par
\ul\page\f2\fs32 Pr\'e9sentation du groupe\f0\fs24\par
\pard\nowidctlpar\par
\par
Fonctions des membres:\par
\ulnone\par
\par
\tab\ul Jonathan RIBAS\ulnone\~: Chef de Projet, Directeur de conception du jeu, Documentation.\par
\tab\ul Jonathan HUOT\ulnone\~: Directeur technique, Artiste, Documentation.\par
\tab\ul Mael SKONDRAS\~\ulnone : Manageur de donn\'e9\lang1033 es, Informateur syst\lang1036\'e8\lang1033 me, Documentation.\lang1036\par
\tab\ul St\'e9phane PETITCOLAS\~\ulnone : Directeur du son, Directeur artistique, Artiste.\par
\ul\par
\par
Comp\'e9tences techniques\~:\par
\par
\par
\ulnone\tab Tous les \'e9l\'e8ves ont des comp\'e9tences \'e9quivalentes. Elles correspondent au cursus suivit. Par ailleurs, chaque \'e9tudiant \'e0 acquis une exp\'e9rience durant le stage de premi\'e8re ann\'e9e. Voici les\~\'ab\~plus\~\'bb de chaque \'e9tudiant\~:\par
\par
\tab Jonathan Huot\~: Langage objet (C++), utilisation des sockets r\'e9seaux.\par
\tab Jonathan Ribas.\~: D\'e9bugue d\rquote applications/librairie existantes en VC++.\par
\tab Mael Skondras\~: Environnement r\'e9seau, administration de serveurs.\par
\tab St\'e9phane Petitcolas\~: Mise en \'9cuvre d\rquote un site web dynamique.\par
\ul\par
\ulnone\par
\par
\pard\lang1033\ul\fs32\page\lang1036\f2 Structure Technique\lang1033\f0\par
\ulnone\fs24\par
\ul\b Le Path-finding A*/Ray-Cast\par
\pard\nowidctlpar\ulnone\b0\par
\lang1036 La deuxi\'e8me parti de notre dossier de fin de piscine est de faire un algorithme de \'ab\~Path-Finding\~\'bb.\par
Nous avons cod\'e9 un programme, qui est une repr\'e9sentation graphique application en SDL du Pathi-finding. C\rquote est une application basique, permettant simplement de charger une carte en m\'e9moire et de d\'e9placer une unit\'e9 sur celle-ci.\par
Il est \'e9galement possible de \'ab\~forcer\~\'bb l\rquote unit\'e9 a passer par des \'ab\~way-points\~\'bb.\par
\par
Le Path-Finding r\'e9alis\'e9 est en r\'e9alit\'e9 une combinaison des 2 algorithmes majeurs existants. La recherche se fait cases par case en essayant de se rapprocher du point d\rquote arriv\'e9. Il prends en comptes les \'ab\~poids\~\'bb des cases selon leur nature (terre, montagne, etc) ainsi que les diagonales. Il utilise seulement les informations disponibles sur le client, c'est-\'e0-dire qu\rquote il prend en compte le \'ab\~fog of war\~\'bb. Nous avons consid\'e9r\'e9s que les mouvements des unit\'e9s seraient plus \'ab\~r\'e9alistes\~\'bb puisqu\rquote elles ne pourraient pas \'ab\~deviner\~\'bb le chemin \'e0 prendre avant de le voir.\par
\par
Le Path-Finding consiste a trouver le chemin le plus rapide pour se rendre d\rquote un point \'e0 un autre. Cependant le chemin le plus rapide ne signifie pas forcement celui qui est le plus court, car nous d\'e9sirons int\'e9grer le principe de poids d'une case. Par exemple il est plus rapide de passer sur une case ou il n\rquote y as que de l'herbe que sur une case ou il y a du sable. Il faudra donc, lors du calcul du chemin le plus rapide, tenir compte de ces param\'e8tres.\par
On aura aussi bien sur le facteur \'ab\~distance parcourue\~\'bb pour se rendre du point de d\'e9part au point d'arriv\'e9 qui sera pris en compte. Le chemin id\'e9al sera donc le plus rapide et le moins \'ab\~co\'fbteux\~\'bb ou \'ab\~lourd\~\'bb.\par
Pour ce faire nous avons choisi l'algorithme A* qui est d'une part l'algorithme le plus performant et qui permet tr\'e8s facilement d'int\'e9grer toute gestion de poids d'une case.\par
Concr\'e8tement on va se placer sur la case de d\'e9part et on va regarder toutes les cases adjacentes, pour chacune on va calculer le poid, la distance par rapport au point de d\'e9part, la distance par rapport au point d'arrive, la somme des trois et le chemin pour arriver a cette case.\par
On choisira la case dont le total est le plus faible et a partir de celle ci on recommencera la m\'eame op\'e9ration.\par
Bien sur on ne recalculera pas les cases pour lesquels on a d\'e9j\'e0 fait le calcul.\par
A chaque fois on choisira la case dont la somme est la plus petite.\par
Une fois arrive sur la case d'arrive il suffit de regarder le chemin qu'il faut pour arriver a celle-ci, \par
c'est le chemin optimal.\par
\par
Lorsque l'on fait appel au pathfinding, les param\'e8tres suivant sont transmis:\par
- Coordonn\'e9es du point de d\'e9part\par
- Coordonn\'e9es du point d'arrive.\par
- Map(contenant les coordonn\'e9es de chaque point ainsi que le poids de chaque case de 1 a 9).\par
\page\par
\par
\ul\b Base de donn\'e9e XML du jeu\ulnone\b0\par
\par
Ci-joint une premi\'e8re version de la syntaxe de la base de donn\'e9e en XML qui sera charg\'e9e au lancement du moteur.\par
Nous avons aussi inclut les champs de caract\'e9ristiques qui pourront \'eatre pr\'e9sent (sans ne rien changer au jeu), mais qui ne seront pas g\'e9rer dans le rendu de Juillet.\par
\par
\par
\par
\ul\b Fonctionnement de base du jeu\par
\pard\ulnone\b0\par
Nous allons ici d\'e9tailler les diff\'e9rentes \'e9tapes lors d\rquote un lancement de partie:\par
\par
\pard\fi-360\li720\tx720 -\tab Le moteur se lance.\par
\pard\nowidctlpar\fi-360\li720\tx720 -\tab Le moteur charge la base de donn\'e9e du jeu qui va comprendre toutes les informations    n\'e9cessaires\~; toutes les entit\'e9s et leurs caract\'e9ristiques (unit\'e9s, b\'e2timents, sorts, armes, terrain, etc.), la configuration du jeu, les cartes et les sons, et les sprites.\par
\pard\nowidctlpar\fi-360\li720 -\tab Le moteur lance alors le jeu.\par
-\tab Le moteur envoi au jeu une liste de tout ce qu'il a pu lire dans la base de donn\'e9es    (genre les maps/races/options disponibles ..), le jeu (ou une partie annexe) va s'occuper du lancement d'une partie en donnant tous les choix possibles au joueur.\par
-\tab Une fois la partie lanc\'e9e par le joueur, le jeu envoi tous les caract\'e9ristiques de la partie    cr\'e9e au moteur. (map s\'e9lectionn\'e9e, nombre de joueurs, les races, type de jeu, les teams...)\par
-\tab Le moteur va alors se charger du d\'e9roulement de la partie.\par
\pard\nowidctlpar\par
}
 